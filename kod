/*
#include <iostream>
#include <cmath>

using namespace std;

int main()
{
    long long children;
    long long eat;
    long long vrem;
    cin >> children;
    if (children % 3 == 1)
    {
        eat = (((children - 1) * 2) / 3) + 1;
    }
    if (children % 3 == 2)
    {
        eat = (((children - 2) * 2) / 3) + 1;
    }
    if (children % 3 == 0)
    {
        eat = (children * 2) / 3;
    }
        
    cout << eat;
    
}
*/

/*

#include <iostream>
#include <cmath>

using namespace std;

int main()
{
    long long n, k, fin, dop, dopzn;

    cin >> n;
    cin >> k;

    dop = n % k;
    if (dop == 0)
    {
        dopzn = 0;
    }
    if (dop != 0)
    {
        dopzn = 1;
    }
    fin = ((floor(n / k))  + k - 1 + dopzn);
    cout << fin;
}
*/
/*
#include <iostream>
#include <cmath>
#include <vector>
#include <ctime>

using namespace std;

int main()
{
    
    long long n, m, k, c, fin = 0;
    cin >> n;
    cin >> m;
    cin >> k;
    cin >> c;
    unsigned int start_time = clock();

    
    for (long long i = 0; i < n; i++)
    {
        for (long long j = 0; j < m; j++)
        {
            long long color = (j - i) % k + 1;
            if (color == c)
                fin++;
        }
        
    }

    


    cout << fin << endl;
    unsigned int end_time = clock();
    unsigned int search_time = end_time - start_time;  
    cout << search_time;
}
*/
